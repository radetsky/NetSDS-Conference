Current dialplan flags and arguments used by app_konference
Please note that app_konference is still work in progress, so this document might be outdated. As always, the source code is the definitive reference (member.c in create_member())

The general syntax of Konference application is:

exten => <ext>,<pri>,Konference(<confname>,<flags>,<optional args>,<more optional args>)

	The optional arguments have the format <arg>=<value> and should be separated by a comma

	1. Flags

	Mute/no receive options:
	'L' : member starts with audio muted
	'l' : member starts unable to receive audio

	Enable preprocessing:
	'T' : telephone, enable preprocessing

	Preprocessing (SILDET=2) options:
	'V' : enable Voice Activity Detection 
	'D' : enable De-noise
	'A' : enable Automatic Gain Control

	DTMF options:
	'R' : enable DTMF relay: DTMF tones generate a manager event

	Moderator options:
	'M' : member is a "moderator". When a moderator quits, all members are kicked and the conference is disabled.
	'x' : when the last moderator leaves, all conferees are kicked and conference ends.

	Miscellaneous:
	'a' : V + T

	Future development (these are not implemented yet):
	?

	2. Arguments

	The parser is not perfect so it might not cope well with spurious spaces or other characters.
	All arguments are optional; appkonference will use sane default values for missing arguments.

	vad_prob_start=<float> : Probability used to detect start of speech
	vad_prob_continue=<float> : Probability to detect continuation of speech
	max_users=<int> : Limit conference participants to max_users
	type=<string>: Type identifier
	spy=<string>: Channel name to spy

	3. Example

	exten => _X.,1,Konference(testconf,R)

	Application connects to conference "testconf" with DTMF events enabled. 

	4. Channel spying/whispering

	To use the spy parameter in the dial plan assume sip/5060-3985 is who you're
	interested in spying on and whispering to and say the conference started like
	this:

	konference(testconf,aR)

	You would enter the conference: konference(testconf,aR,spy=sip/5060-3985).

	When you join the conference, you will only hear the audio from sip/5060-3985
	and since you didn't start the conference muted, you will be able to talk
	directly to sip/5060-3985.

	On the other hand, if you entered the conference like this:

	konference(testconf,aRL,spy=sip/5060-3985)

	You would join the conference muted (unable to talk directly to
	sip/5060-3985) and you would hear the audio only from that channel.

	Finally, you can toggle whispering on/off at any time using the command
	line interface to mute or unmute the spyer channel.

The general syntax of KonferenceCount application is:

	exten => <ext>,<pri>,KonferenceCount(confname,<variable>)

	Examples

	To play the conference count to the channel:

	exten => _X.,1,KonferenceCount(textconf)

	To put the conference count in a channel variable:

	exten => _X.,1,KonferenceCount(textconf,testvar)


